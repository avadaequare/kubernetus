kubectl get pod webapp-color -o yaml > webappcolor-definition.yaml --> if you want to create a definition file from existing pod.
kubectl get configmaps --> to get config maps in default namespace 
kubectl create configmap webapp-config-map --from-literal=APP_COLOR=darkblue --from-literal=APP_OTHER=disregard
configmap/webapp-config-map created --> to Create a new ConfigMap for the webapp-color POD
kubectl create secret generic db-secret --from-literal=DB_Host=sql01 --from-literal=DB_User=root --from-literal=DB_Password
=password123 --> to create secret using command
echo "cdbfg=" | base64 --decode --> to decode an encoded secret
kubectl run po yellow --image=busybox --dry-run=client -o yaml > yellow.yaml -->The command kubectl run po yellow --image=busybox --dry-run=client -o yaml > yellow.yaml is used to create a YAML configuration file for a Kubernetes Pod without actually creating the Pod in the cluster. Here's a breakdown of each part of the command:
                                                                 |
                                                                 | 
kubectl: The command-line tool for interacting with Kubernetes clusters.

run: This command is used to create a new resource in Kubernetes. In older versions, kubectl run could be used to create various resources like Deployments, Pods, etc. However, in newer versions, it is typically used to create a Pod.

po yellow: This part of the command specifies the name of the Pod to be created. Here, yellow is the name of the Pod.

--image=busybox: This flag specifies the container image to use for the Pod. In this case, the busybox image is used, which is a minimal Docker image that includes a few basic utilities.

--dry-run=client: This flag tells kubectl to only simulate the creation of the Pod without actually creating it. The client value specifies that the dry run should be performed client-side, meaning the command will not contact the Kubernetes API server.

-o yaml: This flag specifies the output format for the generated configuration. In this case, it specifies that the output should be in YAML format, which is commonly used for Kubernetes configuration files.

> yellow.yaml: This part of the command redirects the output to a file named yellow.yaml. This means the YAML configuration generated by the command will be saved to this file.

kubectl -n elastic-stack exec -it app -- cat /log/app.log --> is used to execute a command inside a container running in a Kubernetes Pod. 
